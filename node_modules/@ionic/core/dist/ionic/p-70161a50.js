const e=["Tab","ArrowDown","Space","Escape"," ","Shift","Enter","ArrowLeft","ArrowRight","ArrowUp"],t=()=>{let t=[],o=!0;const s=document,n=e=>{t.forEach(e=>e.classList.remove("ion-focused")),e.forEach(e=>e.classList.add("ion-focused")),t=e},c=()=>{o=!1,n([])};s.addEventListener("keydown",t=>{(o=e.includes(t.key))||n([])}),s.addEventListener("focusin",e=>{if(o&&e.composedPath){const t=e.composedPath().filter(e=>!!e.classList&&e.classList.contains("ion-focusable"));n(t)}}),s.addEventListener("focusout",()=>{s.activeElement===s.body&&n([])}),s.addEventListener("touchstart",c),s.addEventListener("mousedown",c)};export{t as startFocusVisible};